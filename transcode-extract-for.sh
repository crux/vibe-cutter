#!/bin/bash

# ==================================================================================
# extract-video-params.sh
#
# This script extracts key video parameters from a reference video file and
# generates a configuration file (`.env` format) suitable for use with the
# `transcode-for.sh` script.
#
# Usage: ./extract-video-params.sh <reference-video> <output-env-file>
# Example: ./extract-video-params.sh original.mp4 extracted.env
# ==================================================================================

# --- Argument Handling ---
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 <reference-video> <output-env-file>"
    echo "Example: $0 original.mp4 extracted.env"
    exit 1
fi

INPUT_VIDEO="$1"
OUTPUT_ENV_FILE="$2"

# Load environment variables from the main .env file if it exists, for FFPROBE_BIN
if [ -f ".env" ]; then
    source .env
fi

# Set default for FFPROBE_BIN if not defined in .env
FFPROBE_BIN="${FFPROBE_BIN:-ffprobe}"

# --- Validate Dependencies ---
if ! command -v "$FFPROBE_BIN" &> /dev/null; then
    echo "Error: $FFPROBE_BIN command not found. Please install FFmpeg and ensure it's in your PATH."
    exit 1
fi

# --- Validate Input Video ---
if [ ! -f "$INPUT_VIDEO" ]; then
    echo "Error: Input video file not found: '$INPUT_VIDEO'"
    exit 1
fi

echo "--- Extracting parameters from '$INPUT_VIDEO' ---"

# --- Extract Video Properties using FFprobe ---
RESOLUTION=$("$FFPROBE_BIN" -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 "$INPUT_VIDEO")
BITRATE_BPS=$("$FFPROBE_BIN" -v error -show_entries format=bit_rate -of default=noprint_wrappers=1:nokey=1 "$INPUT_VIDEO")

# --- Prepare Parameters for the .env file ---
# Use a default CRF value. If bitrate is available, also include calculated bitrate values.
CRF_VALUE=21
PRESET_VALUE="medium"
AUDIO_CODEC_VALUE="copy"

if [ -z "$BITRATE_BPS" ] || [ "$BITRATE_BPS" -eq 0 ]; then
    echo "Warning: Could not determine source bitrate. Bitrate-related values will be empty."
    BITRATE_VALUE=""
    MAXRATE_VALUE=""
    BUFSIZE_VALUE=""
else
    # Calculate bitrates in M (e.g., 1.8M) for informational purposes
    BITRATE_VALUE=$(awk -v bps="$BITRATE_BPS" 'BEGIN{printf "%.1fM", bps/1000000}')
    MAXRATE_VALUE=$(awk -v bps="$BITRATE_BPS" 'BEGIN{printf "%.1fM", bps*1.5/1000000}')
    BUFSIZE_VALUE=$(awk -v bps="$BITRATE_BPS" 'BEGIN{printf "%.1fM", bps*2/1000000}')
fi

# --- Write to Output File ---
# This will overwrite the output file if it already exists.
cat > "$OUTPUT_ENV_FILE" << EOL
# ==================================================================================
# Transcoding parameters extracted from '$INPUT_VIDEO'
# Generated by extract-video-params.sh on $(date)
# ==================================================================================

# --- Bitrate Settings (Informational) ---
# The transcode script uses CRF by default for quality-based encoding.
# These values are provided for reference or for bitrate-based encoding modes.
# VIDEO_BITRATE="${BITRATE_VALUE}"
# MAXRATE="${MAXRATE_VALUE}"
# BUFSIZE="${BUFSIZE_VALUE}"

# --- Encoding Settings ---
# PRESET affects the encoding speed vs. compression ratio.
# Options: ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow
PRESET="${PRESET_VALUE}"

# CRF (Constant Rate Factor) controls the quality. Lower values mean higher quality.
# A sane range is 18-28. 23 is the default for x264.
CRF="${CRF_VALUE}"

# --- Audio Settings ---
# 'copy' will stream-copy the audio without re-encoding.
# 'aac' can be used to re-encode to AAC.
AUDIO_CODEC="${AUDIO_CODEC_VALUE}"

# --- Video Resolution ---
# The target resolution for the output video.
TARGET_RESOLUTION="${RESOLUTION}"
EOL

echo "âœ… Parameters extracted and saved to '$OUTPUT_ENV_FILE'"

